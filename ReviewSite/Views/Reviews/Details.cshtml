@model ReviewSite.Models.Review
<link href="https://use.fontawesome.com/releases/v5.0.8/css/all.css" rel="stylesheet">
@{
    ViewBag.Title = "Details";
}
<div class="jumbohome">
    <h2 class="text-center">Details</h2>

    <div>
        <h4 class="text-center">@Html.DisplayFor(model => model.Name)</h4>
        <hr />

        @* This allows the thumbnail to be styled according to the category the content belongs to. (only done for obvious tech item choices)*@
        <div class="thumbnail thumbnail-@Html.DisplayFor(model => model.Category.Type)">
            <div class="row">
                <div class="col-md-6 text-right">

                    @Html.DisplayNameFor(model => model.Category.Type)
                </div>
                <div class="col-md-6">
                    @Html.DisplayFor(model => model.Category.Type)
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 text-right">
                    @Html.DisplayNameFor(model => model.PublishDate)
                </div>
                <div class="col-md-6">
                    @Html.DisplayFor(model => model.PublishDate)
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 text-right">
                    @Html.DisplayNameFor(model => model.Rating)
                </div>
                <div class="col-md-6">
                    @* This while loop displays stars with fontawesome depending on the int value entered in the rating section
                        The first part displays the closed stars while the second displays the open stars with a limit on 5 stars total*@
                    @{
                        int i = 0;
                        while (i < Model.Rating)
                        {
                            <i class="fas fa-star"></i>
                            i++;
                        }
                        while (i < 5)
                        {
                            <i class="far fa-star"></i>
                            i++;
                        }

                    }
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 text-right">
                    @Html.DisplayNameFor(model => model.WouldReccomend)
                </div>
                <div class="col-md-6">
                    @Html.DisplayFor(model => model.WouldReccomend)
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 text-right">
                    @Html.DisplayNameFor(model => model.Comment)
                </div>
                <div class="col-md-6">
                    @Html.DisplayFor(model => model.Comment)
                </div>
            </div>
        </div>
        <p>
            @Html.ActionLink("Edit", "Edit", new { id = Model.ReviewID }) |
            @Html.ActionLink("Back to List", "Index")
        </p>
    </div>
</div>
